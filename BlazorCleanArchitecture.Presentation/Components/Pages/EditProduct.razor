@* Components/EditProduct.razor *@
@page "/edit-product/{id:int}"
@rendermode InteractiveServer
@inject IProductService ProductService
@inject NavigationManager NavigationManager

<div class="container mt-4">
    <h3>Edit Product</h3>

    <EditForm Model="product" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label>Name:</label>
            <InputText @bind-Value="product.Name" class="form-control" />
            <ValidationMessage For="@(() => product.Name)" />
        </div>

        <div class="form-group">
            <label>Description:</label>
            <InputTextArea @bind-Value="product.Description" class="form-control" />
            <ValidationMessage For="@(() => product.Description)" />
        </div>

        <div class="form-group">
            <label>Price:</label>
            <InputNumber @bind-Value="product.Price" class="form-control" />
            <ValidationMessage For="@(() => product.Price)" />
        </div>

        <div class="form-group">
            <label>Image URL:</label>
            <InputText @bind-Value="product.ImageUrl" class="form-control" />
            <ValidationMessage For="@(() => product.ImageUrl)" />
        </div>

        <div class="mt-3">
            <button type="submit" class="btn btn-primary">Update Product</button>
            <button type="button" class="btn btn-secondary ml-2" @onclick="Cancel">Cancel</button>
        </div>
    </EditForm>
</div>

@code {
    [Parameter]
    public int Id { get; set; }

    private Product product = new();

    protected override void OnInitialized()
    {
        var existingProduct = ProductService.GetProducts().FirstOrDefault(p => p.Id == Id);
        if (existingProduct != null)
        {
            product = existingProduct;
        }
    }

    private void HandleValidSubmit()
    {
        ProductService.UpdateProduct(Id, product);
        NavigationManager.NavigateTo("/products");
    }

    private void Cancel()
    {
        NavigationManager.NavigateTo("/products");
    }
}