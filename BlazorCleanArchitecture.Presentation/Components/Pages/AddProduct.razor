@* Components/AddProduct.razor *@
@page "/add-product"
@rendermode InteractiveServer
@inject IProductService ProductService
@inject NavigationManager NavigationManager

<div class="container mt-4">
    <h3>Add New Product</h3>

    <EditForm Model="@newProduct" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label>Name:</label>
            <InputText @bind-Value="newProduct.Name" class="form-control" />
            <ValidationMessage For="@(() => newProduct.Name)" />
        </div>

        <div class="form-group">
            <label>Description:</label>
            <InputTextArea @bind-Value="newProduct.Description" class="form-control" />
            <ValidationMessage For="@(() => newProduct.Description)" />
        </div>

        <div class="form-group">
            <label>Price:</label>
            <InputNumber @bind-Value="newProduct.Price" class="form-control" />
            <ValidationMessage For="@(() => newProduct.Price)" />
        </div>

        <div class="form-group">
            <label>Image URL:</label>
            <InputText @bind-Value="newProduct.ImageUrl" class="form-control" />
            <ValidationMessage For="@(() => newProduct.ImageUrl)" />
        </div>

        <div class="mt-3">
            <button type="submit" class="btn btn-success">Save Product</button>
            <button type="button" class="btn btn-secondary ml-2" @onclick="Cancel">Cancel</button>
        </div>
    </EditForm>
</div>

@code {
    private Product newProduct = new();

    private void HandleValidSubmit()
    {
        ProductService.AddProduct(newProduct);
        NavigationManager.NavigateTo("/products");
    }

    private void Cancel()
    {
        NavigationManager.NavigateTo("/products");
    }
}